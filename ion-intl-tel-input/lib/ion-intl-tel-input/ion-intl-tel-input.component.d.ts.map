{"version":3,"file":"ion-intl-tel-input.component.d.ts","sources":["ion-intl-tel-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, OnChanges, SimpleChanges, ElementRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { IonInput, Platform } from '@ionic/angular';\r\nimport { IonicSelectableComponent } from 'ionic-selectable';\r\nimport { CountryI } from '../models/country.model';\r\nimport { IonIntlTelInputModel } from '../models/ion-intl-tel-input.model';\r\nimport { IonIntlTelInputService } from '../ion-intl-tel-input.service';\r\n/**\r\n * @ignore\r\n */\r\nexport declare class IonIntlTelInputComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n    private el;\r\n    private platform;\r\n    private ionIntlTelInputService;\r\n    cssClass: boolean;\r\n    isIos: boolean;\r\n    isMD: boolean;\r\n    hasFocus: any;\r\n    readonly hasValueCssClass: boolean;\r\n    readonly isEnabled: boolean;\r\n    /**\r\n     * Iso Code of default selected Country.\r\n     * See more on.\r\n     *\r\n     * @default ''\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    defaultCountryiso: string;\r\n    /**\r\n     * Determines whether to use `00` or `+` as dial code prefix.\r\n     * Available attributes are '+' | '00'.\r\n     * See more on.\r\n     *\r\n     * @default +\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    dialCodePrefix: '+' | '00';\r\n    /**\r\n     * Determines whether to select automatic country based on user input.\r\n     * See more on.\r\n     *\r\n     * @default false\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    enableAutoCountrySelect: boolean;\r\n    /**\r\n     * Determines whether an example number will be shown as a placeholder in input.\r\n     * See more on.\r\n     *\r\n     * @default true\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    enablePlaceholder: boolean;\r\n    /**\r\n     * A fallaback placeholder to be used if no example number is found for a country.\r\n     * See more on.\r\n     *\r\n     * @default ''\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    fallbackPlaceholder: string;\r\n    /**\r\n     * If a custom placeholder is needed for input.\r\n     * If this property is set it will override `enablePlaceholder` and only this placeholder will be shown.\r\n     * See more on.\r\n     *\r\n     * @default ''\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    inputPlaceholder: string;\r\n    /**\r\n     * Maximum Length for input.\r\n     * See more on.\r\n     *\r\n     * @default '15'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    maxLength: string;\r\n    /**\r\n     * Title of modal opened to select country dial code.\r\n     * See more on.\r\n     *\r\n     * @default 'Select Country'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalTitle: string;\r\n    /**\r\n     * CSS class to attach to dial code selectionmodal.\r\n     * See more on.\r\n     *\r\n     * @default ''\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalCssClass: string;\r\n    /**\r\n     * Placeholder for input in dial code selection modal.\r\n     * See more on.\r\n     *\r\n     * @default 'Enter country name'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalSearchPlaceholder: string;\r\n    /**\r\n     * Text for close button in dial code selection modal.\r\n     * See more on.\r\n     *\r\n     * @default 'Close'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalCloseText: string;\r\n    /**\r\n     * Slot for close button in dial code selection modal. [Ionic slots](https://ionicframework.com/docs/api/item) are supported\r\n     * See more on.\r\n     *\r\n     * @default 'end'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalCloseButtonSlot: 'start' | 'end' | 'primary' | 'secondary';\r\n    /**\r\n     * Determines whether dial code selection modal should be searchable or not.\r\n     * See more on.\r\n     *\r\n     * @default 'true'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalCanSearch: boolean;\r\n    /**\r\n     * Determines whether dial code selection modal is closed on backdrop click.\r\n     * See more on.\r\n     *\r\n     * @default 'true'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalShouldBackdropClose: boolean;\r\n    /**\r\n     * Determines whether input should be focused when dial code selection modal is opened.\r\n     * See more on.\r\n     *\r\n     * @default 'true'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalShouldFocusSearchbar: boolean;\r\n    /**\r\n     * Message to show when no countries are found for search in dial code selection modal.\r\n     * See more on.\r\n     *\r\n     * @default 'true'\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    modalSearchFailText: string;\r\n    /**\r\n     * List of iso codes of manually selected countries as string, which will appear in the dropdown.\r\n     * **Note**: `onlyCountries` should be a string array of country iso codes.\r\n     * See more on.\r\n     *\r\n     * @default null\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    onlyCountries: Array<string>;\r\n    /**\r\n     * List of iso codesn as string of  countries, which will appear at the top in dial code selection modal.\r\n     * **Note**: `preferredCountries` should be a string array of country iso codes.\r\n     * See more on.\r\n     *\r\n     * @default null\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    preferredCountries: Array<string>;\r\n    /**\r\n     * Determines whether first country should be selected in dial code select or not.\r\n     * See more on.\r\n     *\r\n     * @default true\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    selectFirstCountry: boolean;\r\n    /**\r\n     * Determines whether to visually separate dialcode into the drop down element.\r\n     * See more on.\r\n     *\r\n     * @default true\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    separateDialCode: boolean;\r\n    /**\r\n     * Fires when the Phone number Input is changed.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly numberChange: EventEmitter<Event>;\r\n    /**\r\n     * Fires when the Phone number Input is blurred.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly numberBlur: EventEmitter<void>;\r\n    /**\r\n     * Fires when the Phone number Input is focused.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly numberFocus: EventEmitter<void>;\r\n    /**\r\n     * Fires when the user is typing in Phone number Input.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly numberInput: EventEmitter<KeyboardEvent>;\r\n    /**\r\n     * Fires when the dial code selection is changed.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly codeChange: EventEmitter<any>;\r\n    /**\r\n     * Fires when the dial code selection modal is opened.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly codeOpen: EventEmitter<any>;\r\n    /**\r\n     * Fires when the dial code selection modal is closed.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly codeClose: EventEmitter<any>;\r\n    /**\r\n     * Fires when a dial code is selected in dial code selection modal.\r\n     * See more on.\r\n     *\r\n     * @memberof IonIntlTelInputComponent\r\n     */\r\n    readonly codeSelect: EventEmitter<any>;\r\n    numberInputEl: IonInput;\r\n    private _value;\r\n    country: CountryI;\r\n    phoneNumber: string;\r\n    countries: CountryI[];\r\n    disabled: boolean;\r\n    phoneUtil: any;\r\n    onTouched: () => void;\r\n    propagateChange: (_: IonIntlTelInputModel) => void;\r\n    constructor(el: ElementRef, platform: Platform, ionIntlTelInputService: IonIntlTelInputService);\r\n    value: IonIntlTelInputModel | null;\r\n    emitValueChange(change: IonIntlTelInputModel | null): void;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    writeValue(obj: IonIntlTelInputModel): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    fillValues(value: IonIntlTelInputModel): void;\r\n    hasValue(): boolean;\r\n    onCodeOpen(): void;\r\n    onCodeChange(event: {\r\n        component: IonicSelectableComponent;\r\n        value: any;\r\n    }): void;\r\n    onCodeClose(): void;\r\n    onCodeSearchCountries(event: {\r\n        component: IonicSelectableComponent;\r\n        text: string;\r\n    }): void;\r\n    onCodeSelect(): void;\r\n    onIonNumberChange(event: Event): void;\r\n    onIonNumberBlur(): void;\r\n    onIonNumberFocus(): void;\r\n    onIonNumberInput(event: KeyboardEvent): void;\r\n    onNumberChange(): void;\r\n    onNumberKeyDown(event: KeyboardEvent): void;\r\n    private filterCountries;\r\n    private getCountryIsoCode;\r\n    private fetchAllCountries;\r\n    private getCountryByIsoCode;\r\n    private isNullOrWhiteSpace;\r\n    private removeDialCode;\r\n    private setCountry;\r\n    private setPreferredCountries;\r\n    private startsWith;\r\n    private getClasses;\r\n    private setClasses;\r\n    private setIonicClasses;\r\n    private setItemClass;\r\n}\r\n"]}